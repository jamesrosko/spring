<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/data/jpa   
           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd  
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.0.xsd
           ">

  <context:component-scan base-package="com.jamesrosko.spring" />
  <tx:annotation-driven transaction-manager="transactionManager" />

  <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="ignoreResourceNotFound" value="true" />
    <property name="locations">
      <list>
        <value>classpath:default.properties</value>
        <value>classpath:local.properties</value>
      </list>
    </property>
  </bean>

  <jpa:repositories entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="transactionManager"
    base-package="com.jamesrosko.spring" />

<!--   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="flyway"> -->
  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <list>
        <value>com.jamesrosko.spring</value>
        <value>com.jamesrosko.spring.auth</value>
      </list>
    </property>
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="false" />
        <property name="databasePlatform" value="${jdbc.dialect}" />
        <property name="generateDdl" value="true" />
      </bean>
    </property>
    <property name="jpaProperties">
      <props>
        <!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
        <!-- <prop key="hibernate.show_sql">false</prop> -->
        <prop key="hibernate.show_sql">true</prop>
        <!-- <prop key="hibernate.format_sql">true</prop> -->
        <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
        <!-- <prop key="hibernate.event.merge.entity_copy_observer">allow</prop> -->
        <!-- <prop key="hibernate.default_schema">test</prop> -->
      </props>
    </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

  <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>

  <!-- <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase"> <property name="dataSource" ref="dataSource" 
    /> <property name="changeLog" value="classpath:db-changelog.xml" /> <property name="contexts" value="test, production" /> 
    </bean> -->

  <!-- <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
    <property name="dataSource" ref="dataSource" />
  </bean> -->


  <task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
  <task:executor id="myExecutor" pool-size="7-42" queue-capacity="100" />
  <task:scheduler id="myScheduler" pool-size="10" />



</beans>